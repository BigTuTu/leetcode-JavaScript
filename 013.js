/**
 * @param {string} s
 * @return {number}
 * 
 * 首先要来了解一下罗马数字表示法，基本字符有7个：I，V，X，L，C，D，M，分别表示1，5，10，50，100，500，1000。并且在构成数字的时候，有下列规则：

相同的数字连写，所表示的数等于这些数字相加得到的数，如：Ⅲ= 3；
小的数字在大的数字的右边，所表示的数等于这些数字相加得到的数， 如：Ⅷ= 8；Ⅻ= 12；
小的数字，（限于Ⅰ、X 和C）在大的数字的左边，所表示的数等于大数减小数得到的数，如：Ⅳ=4；Ⅸ=9；
正常使用时，连写的数字重复不得超过三次。
所以，根据以上规则，可以发现其中的规律，就是只需要比较前后元素的大小，如果前面比后面大，
这两个罗马字母代表的数字就相加；如果前面比后面小，就后面的减去前面的；
如果相等也相加。再把每一对都相加，最后结果就是转换后的整数了（需要注意的是，最后一个字母是肯定要相加的）
 */
var romanToInt = function(s) {
    var opt = { 'M': 1000, 'D': 500, 'C': 100, 'L': 50, 'X': 10, 'V': 5, 'I': 1 },
        num = 0;
    for (i = 0; i < s.length - 1; i++) {
        if (opt[s[i]] >= opt[s[i + 1]]) {
            num = num + opt[s[i]];
        } else {
            num = num - opt[s[i]];
        }
    }
    return num + opt[s[s.length - 1]];
};